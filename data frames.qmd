---
title: "Таблиці даних"
author: "Олександр Виноградов"
format: html
editor: visual
---

## Особливий тип вектору: list (список)

Елементами вектору такого вектору можуть бути об'єкти будь-якого типу — числа, рядкові значення, дати, логічні значення, а також інші списки. Завдяки цьому список може зберігати дуже складний об'єкт з деревовидною будовою. В R списки для нас важливі тому, що вхідні дані і результати аналізу часто є списками.

Створення списку здійснюється за допомогою функції list(). Розглянемо приклад:

```{r}
мої_дані <- list(
  номер = 1:10,
  учасник = c(
    "Андрій", "Анжела", "Божена", "Власта", "Богдан",
    "Галина", "Василь", "Гордій", "Дмитро", "Дарина"
  ),
  стать = c(1, 0, 0, 0, 1, 0, 1, 1, 1, 0),
  вік = c(16, 18, 17, 17, 17, 21, 18, 19, 19, 17)
)

мої_дані
```

Зверніть увагу на спеціальний символ долару, який використовуюється в R для того, щоб отримати доступ чи послатися на певний елемент списку:

```{r}
мої_дані$номер
```

Також можна використати інший спосіб дістатися до бажаного елементу списку, подвійні квадратні дужки:

```{r}
## За номером елементу
мої_дані[[ 2 ]]

## За ім'ям, яке зберігається в іншій змінній:
Змінна <- "вік"
мої_дані[[Змінна]]
```

Як з окремими векторами, що перебувають в середовищі, з елементами списку можна проводити статистичний аналіз чи будувати графіки, просто тепер треба згадувати і сам список, і його елемент:

```{r}
hist(
  x = мої_дані $ вік, 
  col = "red"
)
```

Статистичний аналіз:

```{r}
## Ось так знаходимо кореляцію:
cor.test(
  x = мої_дані $ вік, y = мої_дані $ стать
)

## або ось так, менш захаращено
cor.test(
  ~ вік + стать,
  data = мої_дані
)
```

Результат, який повертає функція, найчастіше теж є списком. З списку ми потім можемо діставати будь-який елемент, коли він буде потрібний:

```{r}
Результат <- t.test(
  formula = вік ~ стать,
  data = мої_дані
)

## Ось що друкується на екрані
Результат

## Ось яка структура результату насправді за цим знаходиться:
str(Результат)
```

Таким чином, знаючи структуру результату, який повертає функція, аналітик отримує безмежні можливості діставати з них тільки потрібну інформацію і поєднувати її у будь-який бажаний спосіб. Наприклад:

```{r}
cat(
  "Критерій Ст'юдента дорівнює", Результат $ statistic,
  "його р-значення", Результат $ p.value,
  "\n"
)
```

## Таблиця даних або data.frame

Це особливий клас об'єкту — список, у якого елементи-вектори мають однакову довжину. Ці вектори можуть бути будь-якого типу (навіть списки!). Створення таблиці даних здійснюється за допомогою функції data.frame(). Саме з таблицями даних частіше за все дослідник працює, проводячи аналіз.

```{r}
таблиця <- data.frame(
  номер = 1:10,
  учасник = c("Андрій", "Анжела", "Божена", "Власта", "Богдан", "Галина", "Василь", "Гордій", "Дмитро", "Дарина"),
  стать = c(1, 0, 0, 0, 1, 0, 1, 1, 1, 0),
  вік = c(16, 18, 17, 17, 17, 21, 18, 19, 19, 17)
)

таблиця

str(таблиця)
```

Посилання на окремі стовпчики таблиці даних можна робити, так само, як й у списках:

```{r}
## через символ долара та назву
таблиця$учасник

## через подвійні квадратні дужки і номер
таблиця[[3]]

## через подвійні квадратні дужки рядок з іменем
таблиця[[ 'вік' ]]
```

В таблицях даних можна діставатися до будь-якого елементу через одинарні квадратні дужки. Спочатку вказуються номери рядків, через кому — номери стовпчиків (тобто, змінних):

```{r}
таблиця[3:4, 2:3]

таблиця[c(2, 3, 4, 6, 10), c(4, 2)]
```

Якщо номери не вказувати, R інтерпретує це як бажання дістатися до всіх елементів:

```{r}
таблиця[, 3:4]

таблиця[3:5,]
```

Якщо вказати в квадратних дужках тільки один набір номерів, R вважатиме їх номерами стовпчиків:

```{r}
таблиця[3:4]
```

Стовпчики можна також відібрати за їхніми іменами. Наприклад, створимо вектор імен за допомогою функції зчеплення і вкажемо цей вектор у квадратних дужках:

```{r}
ЗМІННІ <- c("вік", "стать", "учасник")
таблиця[ЗМІННІ]
```

Знак «мінус» перед номером означає, що ці елементи мають бути виключені. Ось таблиця без першого рядка і другого та третього стовпчика:

```{r}
таблиця[-1, -c(2, 3)]
```

Вказувати імена змінних з таблиці даних при аналізі можна в той самий спосіб, що й для списків:

```{r}
table( таблиця $ вік )

cor.test(
  x = таблиця $ вік,
  y = таблиця[[ 3 ]]
)
```

Але кожен раз зазначати назву таблиці разом з іменем стовпчика аналітику може набриднути (аналітики люди ліниві). Більш сучасні функції створюють так, щоб в окремому аргументі (найчастіше **data**) передати функції назву таблиці даних, а в ніших аргументах – імена її стовпчиків:

```{r}
## Спочатку інсталюйте цей пакет, який лежить в основі програми JAMOVI
library(jmv)

descriptives(
  data = таблиця,
  vars = c(вік, стать)
)

corrMatrix(
  data = таблиця,
  vars = c(вік, стать, номер)
)
```
